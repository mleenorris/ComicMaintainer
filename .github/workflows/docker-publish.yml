name: Build and Push Docker Image

on:
  push:
    branches: [ master, stable, test ]
  pull_request:
    branches: [ master ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Get version
        id: get_version
        run: |
          # Extract version from src/version.py
          VERSION=$(python -c "import sys; sys.path.insert(0, 'src'); from version import __version__; print(__version__)")
          echo "Version: $VERSION"
          echo "version=$VERSION" >> $GITHUB_OUTPUT
      
      - name: Determine Docker tags
        id: docker_tags
        run: |
          BRANCH_NAME="${GITHUB_REF#refs/heads/}"
          echo "Building from branch: $BRANCH_NAME"
          
          if [ "$BRANCH_NAME" = "stable" ]; then
            # For stable branch, tag as stable
            TAGS="iceburn1/comictagger-watcher:stable"
          elif [ "$BRANCH_NAME" = "test" ]; then
            # For test branch, tag as test
            TAGS="iceburn1/comictagger-watcher:test"
          else
            # For master branch, tag as latest and with version number
            TAGS="iceburn1/comictagger-watcher:latest
          iceburn1/comictagger-watcher:${{ steps.get_version.outputs.version }}"
          fi
          
          # Output tags in a format that can be used by docker/build-push-action
          echo "tags<<EOF" >> $GITHUB_OUTPUT
          echo "$TAGS" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
        
      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.docker_tags.outputs.tags }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

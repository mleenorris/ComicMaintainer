# Docker Compose example with nginx reverse proxy
# This example shows how to run ComicMaintainer behind nginx

version: '3.8'

services:
  # ComicMaintainer application
  comictagger-watcher:
    image: iceburn1/comictagger-watcher:latest
    container_name: comictagger-watcher
    restart: unless-stopped
    
    environment:
      - WATCHED_DIR=/watched_dir
      - DUPLICATE_DIR=/duplicates
      - PUID=1000
      - PGID=1000
      - WEB_PORT=5000
      # Note: The application is accessed via nginx, so it only needs to bind to the internal network
    
    volumes:
      - /path/to/your/comics:/watched_dir
      - /path/to/your/config:/Config
      - /path/to/your/duplicates:/duplicates
    
    # No need to expose port 5000 to the host - nginx will handle external access
    # ports:
    #   - "5000:5000"
    
    networks:
      - comicmaintainer
    
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
  
  # nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: comictagger-nginx
    restart: unless-stopped
    
    ports:
      # Expose HTTP port to the host
      - "80:80"
      # Optional: Expose HTTPS port if you configure SSL
      # - "443:443"
    
    volumes:
      # Mount nginx configuration
      - ./nginx-reverse-proxy.conf:/etc/nginx/conf.d/default.conf:ro
      # Optional: Mount SSL certificates if using HTTPS
      # - /path/to/ssl/certs:/etc/nginx/ssl:ro
    
    networks:
      - comicmaintainer
    
    depends_on:
      - comictagger-watcher
    
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  comicmaintainer:
    driver: bridge

# Usage Instructions:
#
# 1. Create nginx-reverse-proxy.conf in the same directory with the following content:
#
#    server {
#        listen 80;
#        server_name localhost;
#        client_max_body_size 100M;
#
#        location / {
#            proxy_pass http://comictagger-watcher:5000;
#            proxy_set_header Host $host;
#            proxy_set_header X-Real-IP $remote_addr;
#            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#            proxy_set_header X-Forwarded-Proto $scheme;
#            proxy_set_header X-Forwarded-Host $host;
#            proxy_http_version 1.1;
#            proxy_buffering off;
#            proxy_cache off;
#            proxy_read_timeout 600s;
#        }
#    }
#
# 2. Update the volumes paths in this file to match your system:
#    - /path/to/your/comics -> your comics directory
#    - /path/to/your/config -> directory for persistent config/logs
#    - /path/to/your/duplicates -> directory for duplicate files
#
# 3. Start the services:
#    docker-compose -f docker-compose.nginx-proxy.yml up -d
#
# 4. Access the application at http://localhost/
#
# 5. View logs:
#    docker-compose -f docker-compose.nginx-proxy.yml logs -f
#
# 6. Stop the services:
#    docker-compose -f docker-compose.nginx-proxy.yml down
#
# For path prefix deployment (e.g., http://localhost/comics/), modify the nginx
# configuration to use a location block with the prefix:
#
#    location /comics/ {
#        proxy_pass http://comictagger-watcher:5000/;
#        proxy_set_header X-Forwarded-Prefix /comics;
#        # ... rest of the headers
#    }
#
# For HTTPS setup, see docs/REVERSE_PROXY.md for complete instructions.
